name: "execute terraform commdands"

inputs:
  app:
    required: true
  env:
    required: true
  region:
    required: true
  iam_role:
    required: true
  tf_ver:
    required: true
  tf_bucket:
    required: true
  acm_arn:
    required: true
  cognito_admin_user_email:
    required: true
  db_username:
    required: true
  db_password:
    required: true
  db_engine_version:
    required: true

runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{inputs.region}}
        role-to-assume: ${{inputs.iam_role}}
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{inputs.tf_ver}}
    - name: init
      shell: bash
      working-directory: ./infra
      run: >
        terraform init 
        -backend-config="bucket=${{inputs.tf_bucket}}"
        -backend-config="key=${{inputs.app}}/${{inputs.env}}/terraform.tfstate"
        -backend-config="region=${{inputs.region}}"
    - name: format check
      shell: bash
      working-directory: ./infra
      run: terraform fmt -recursive -check
    - name: validate check
      shell: bash
      working-directory: ./infra
      run: terraform validate
    - name: deploy
      shell: bash
      working-directory: ./infra
      env:
        TF_VAR_app: ${{inputs.app}}
        TF_VAR_env: ${{inputs.env}}
        TF_VAR_region: ${{inputs.region}}
        TF_VAR_acm_arn: ${{inputs.acm_arn}}
        TF_VAR_cognito_admin_user_email: ${{inputs.cognito_admin_user_email}}
        TF_VAR_db_username: ${{inputs.db_username}}
        TF_VAR_db_password: ${{inputs.db_password}}
        TF_VAR_db_engine_version: ${{inputs.db_engine_version}}
        TF_VAR_github_repository: ${{github.repository}}        
      run: terraform apply -auto-approve -no-color

    