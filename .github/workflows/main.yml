name: deploy

on:
  push:
    paths:
      - 'app/**'  
      - 'infra/**'  
    branches:
      - main
env:
  TF_VER: 1.3.6
  APP: workout
  ENV: staging
permissions:
  id-token: write
  contents: read



jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      infra: ${{ steps.filter.outputs.infra }}
      app_front: ${{ steps.filter.outputs.app_front }}
      app_back: ${{ steps.filter.outputs.app_back }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            infra:
              - 'infra/**'
            app_front:
              - 'app/containers/frontend/**'
              - 'app/react_frontend/**'
              - 'app/nginx/**'
            app_back:
              - 'app/containers/backend/**'
              - 'app/rails/**'

  infra:
    needs: changes
    if: ${{ needs.changes.outputs.infra == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: exec_terraform
        uses: ./.github/actions/exec_terraform
        with:
          app: ${{ env.APP }}
          env: ${{ env.ENV }}
          region: ${{ secrets.REGION }}
          iam_role: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/${{ env.APP }}-github-actions-role-${{ env.ENV }}
          tf_ver: ${{ env.TF_VER }}
          tf_bucket: ${{secrets.TF_BUCKET}}


      #- name: Configure AWS Credentials
      #  uses: aws-actions/configure-aws-credentials@v1
      #  with:
      #    aws-region: ${{ secrets.REGION }}
      #    role-to-assume: >
      #      arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/
      #      ${{ env.APP }}-github-actions-role-${{ env.ENV }}
      #- name: Setup Terraform
      #  uses: hashicorp/setup-terraform@v1
      #  with:
      #    terraform_version: ${{ env.TF_VER }}
      #- run: terraform fmt -recursive -check
      #- run: >
      #    terraform init 
      #    -backend-config="bucket=${{secrets.TF_BUCKET}}"
      #    -backend-config="key=${{ env.APP }}/${{ env.ENV }}/terraform.tfstate"
      #    -backend-config="region=${{secrets.REGION}}"
      #- run: terraform plan

  
  app_front:
    needs: changes
    if: ${{ needs.changes.outputs.app_front == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: push_container
        uses: ./.github/actions/push_container
        with:
          region: ${{ secrets.REGION }}
          iam_role: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/${{ env.APP }}-github-actions-role-${{ env.ENV }}
          repository: ${{ env.APP }}-front-${{ env.ENV }}
          dockerfile_dir: ./app/containers/frontend/Dockerfile
  app_back:
    needs: changes
    if: ${{ needs.changes.outputs.app_back == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: push_container
        uses: ./.github/actions/push_container
        with:
          region: ${{ secrets.REGION }}
          iam_role: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/${{ env.APP }}-github-actions-role-${{ env.ENV }}
          repository: ${{ env.APP }}-back-${{ env.ENV }}
          dockerfile_dir: ./app/containers/backend/Dockerfile
